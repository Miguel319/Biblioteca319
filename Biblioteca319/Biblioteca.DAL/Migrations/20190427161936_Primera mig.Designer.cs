// <auto-generated />
using System;
using Biblioteca.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biblioteca.DAL.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20190427161936_Primera mig")]
    partial class Primeramig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BibliotecaBOL.Activo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anio");

                    b.Property<decimal>("Costo");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("EstatusId");

                    b.Property<string>("ImagenUrl");

                    b.Property<int>("NumCopias");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.Property<int?>("UbicacionId");

                    b.HasKey("Id");

                    b.HasIndex("EstatusId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Activos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Activo");
                });

            modelBuilder.Entity("BibliotecaBOL.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired();

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("SucursalAsociadaId");

                    b.Property<int?>("TarjetaId");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.HasIndex("SucursalAsociadaId");

                    b.HasIndex("TarjetaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BibliotecaBOL.Estatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Estatus");
                });

            modelBuilder.Entity("BibliotecaBOL.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivoId");

                    b.Property<DateTime>("Desde");

                    b.Property<DateTime>("Hasta");

                    b.Property<int?>("TarjetaId");

                    b.HasKey("Id");

                    b.HasIndex("ActivoId");

                    b.HasIndex("TarjetaId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("BibliotecaBOL.PagosHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivoId");

                    b.Property<DateTime?>("Facturado");

                    b.Property<DateTime>("Pago");

                    b.Property<int?>("TarjetaId");

                    b.HasKey("Id");

                    b.HasIndex("ActivoId");

                    b.HasIndex("TarjetaId");

                    b.ToTable("PagosHistoriall");
                });

            modelBuilder.Entity("BibliotecaBOL.Retencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivoId");

                    b.Property<DateTime>("RetencionPuesta");

                    b.Property<int?>("TarjetaId");

                    b.HasKey("Id");

                    b.HasIndex("ActivoId");

                    b.HasIndex("TarjetaId");

                    b.ToTable("Retenciones");
                });

            modelBuilder.Entity("BibliotecaBOL.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<DateTime>("FechaApertura");

                    b.Property<string>("ImagenURL");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("BibliotecaBOL.SucursalHoras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiaSemana");

                    b.Property<int>("HoraApertura");

                    b.Property<int>("HoraCierre");

                    b.Property<int?>("SucursalId");

                    b.HasKey("Id");

                    b.HasIndex("SucursalId");

                    b.ToTable("SucursalHoras");
                });

            modelBuilder.Entity("BibliotecaBOL.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cargos");

                    b.Property<DateTime>("Creada");

                    b.HasKey("Id");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("BibliotecaBOL.Libro", b =>
                {
                    b.HasBaseType("BibliotecaBOL.Activo");

                    b.Property<string>("Autor")
                        .IsRequired();

                    b.Property<string>("ISBN")
                        .IsRequired();

                    b.Property<string>("IndiceDewey")
                        .IsRequired();

                    b.HasDiscriminator().HasValue("Libro");
                });

            modelBuilder.Entity("BibliotecaBOL.Video", b =>
                {
                    b.HasBaseType("BibliotecaBOL.Activo");

                    b.Property<string>("Director")
                        .IsRequired();

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("BibliotecaBOL.Activo", b =>
                {
                    b.HasOne("BibliotecaBOL.Estatus", "Estatus")
                        .WithMany()
                        .HasForeignKey("EstatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BibliotecaBOL.Sucursal", "Ubicacion")
                        .WithMany("Activos")
                        .HasForeignKey("UbicacionId");
                });

            modelBuilder.Entity("BibliotecaBOL.Cliente", b =>
                {
                    b.HasOne("BibliotecaBOL.Sucursal", "SucursalAsociada")
                        .WithMany("Clientes")
                        .HasForeignKey("SucursalAsociadaId");

                    b.HasOne("BibliotecaBOL.Tarjeta", "Tarjeta")
                        .WithMany()
                        .HasForeignKey("TarjetaId");
                });

            modelBuilder.Entity("BibliotecaBOL.Pago", b =>
                {
                    b.HasOne("BibliotecaBOL.Activo", "Activo")
                        .WithMany()
                        .HasForeignKey("ActivoId");

                    b.HasOne("BibliotecaBOL.Tarjeta", "Tarjeta")
                        .WithMany("Pagos")
                        .HasForeignKey("TarjetaId");
                });

            modelBuilder.Entity("BibliotecaBOL.PagosHistorial", b =>
                {
                    b.HasOne("BibliotecaBOL.Activo", "Activo")
                        .WithMany()
                        .HasForeignKey("ActivoId");

                    b.HasOne("BibliotecaBOL.Tarjeta", "Tarjeta")
                        .WithMany()
                        .HasForeignKey("TarjetaId");
                });

            modelBuilder.Entity("BibliotecaBOL.Retencion", b =>
                {
                    b.HasOne("BibliotecaBOL.Activo", "Activo")
                        .WithMany()
                        .HasForeignKey("ActivoId");

                    b.HasOne("BibliotecaBOL.Tarjeta", "Tarjeta")
                        .WithMany()
                        .HasForeignKey("TarjetaId");
                });

            modelBuilder.Entity("BibliotecaBOL.SucursalHoras", b =>
                {
                    b.HasOne("BibliotecaBOL.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId");
                });
#pragma warning restore 612, 618
        }
    }
}
